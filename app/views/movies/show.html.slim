.row
  .large-12.columns
    h1 =@movie.title
.row
  .large-12
    table.summary
      thead
        tr
          th Cover
          th Year
          th Genres
          th Reviews
          th Cast Members
          th Updated
          th Added
      tbody
        tr
          td =image_tag(@movie.image_url)
          td =@movie.year
          td =@movie.genres.join(', ')
          td =@movie.reviews.size
          td =@movie.related_people[:cast].size
          td =distance_of_time_in_words(Time.new, @movie.updated_at).gsub('about ', '') + " ago"
          td =distance_of_time_in_words(Time.new, @movie.created_at).gsub('about ', '') + " ago"

.row
  .large-4.columns
    .panel
      p
        strong Aspect Sentiment
      =render "topics_graph", id: @movie.id, topics: @movie.sentiment[:topics]
  .large-4.columns
    .panel
      p
        strong Review Sentiment Distribution
      =render "sentiment_distribution_graph", id: @movie.id, sentiment: @movie.sentiment[:distribution]
      p
        strong Range:&nbsp;
        =(@movie.sentiment[:distribution_stats][0] * 100).to_i
        |&nbsp;&nbsp;
        strong Variation:&nbsp;
        =(@movie.sentiment[:distribution_stats][1] * 100).to_i
  .large-4.columns
    .panel
      p
        strong Aspect Discussion Focus
      =render "topic_count_graph", id: @movie.id, topics: @movie.stats[:topic_counts]
.row
  .large-4.columns
    .panel
      p
        strong Cast Sentiment
      =render "cast_sentiment_graph", id: @movie.id, people: @movie.sentiment[:people]
  .large-4.columns
    .panel
      p
        strong Rating Distribution
      =render "ratings_graph", id: @movie.id, ratings: @movie.stats[:rating_distribution]
  .large-4.columns
    .panel
      p
        strong Sentiment by Location
      -if @movie.sentiment[:location].empty?
        p="No location data for this movie's reviews."
      -else
        =render "locations_graph", id: @movie.id, locations: @movie.sentiment[:location]
